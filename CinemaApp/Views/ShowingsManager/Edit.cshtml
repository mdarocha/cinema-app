@model CinemaApp.Models.Showing

@{
    ViewBag.Title = Strings.Edit;
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <h4>Seans</h4> 
    <hr />
    <div class="form-group">
        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
        @Html.HiddenFor(model => model.ID)
    </div>
    <div class="form-row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.MovieID, "Film", htmlAttributes: new { @class = "" })
                <select id="MovieID" class="form-control custom-select" disabled>
                    <option>@Model.Movie.Title</option>
                </select>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.Time, new { @Value = Model.Time.ToString("dd.MM.yy HH:mm"), @class="form-control", id="time-picker", data_val="false"})
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "invalid-feedback" })
            </div>
            <div class="form-group">
                <div class="form-check form-check-inline">
                    @if (Model.Is2D)
                    {
                        @Html.RadioButtonFor(model => model.Is2D, true, new { id = "2d-true", @class = "form-check-input", @checked="checked" })
                    }
                    else
                    {
                        @Html.RadioButtonFor(model => model.Is2D, true, new { id = "2d-true", @class = "form-check-input" })
                    }
                    @Html.Label("2d-true", Strings.Movie2D, new { @class = "form-check-label" })
                </div>
                <div class="form-check form-check-inline">
                    @if (Model.Is2D)
                    {
                        @Html.RadioButtonFor(model => model.Is2D, false, new { id = "2d-false", @class = "form-check-input" })
                    }
                    else
                    {
                        @Html.RadioButtonFor(model => model.Is2D, false, new { id = "2d-false", @class = "form-check-input", @checked="checked" })
                    }

                    @Html.Label("2d-false", Strings.Movie3D, new { @class = "form-check-label" })
                </div>

                @Html.ValidationMessageFor(model => model.Is2D, "", new { @class = "invalid-feedback" })
            </div>
            <div class="form-group">
                <div class="form-check form-check-inline">
                    @if (Model.IsSubtitles)
                    {
                        @Html.RadioButtonFor(model => model.IsSubtitles, true, new { id = "subs-true", @class = "form-check-input", @checked="checked" })
                    }
                    else
                    {
                        @Html.RadioButtonFor(model => model.IsSubtitles, true, new { id = "subs-true", @class = "form-check-input"})
                    }

                    @Html.Label("subs-true", Strings.Subtitles, new { @class = "form-check-label" })
                </div>
                <div class="form-check form-check-inline">
                    @if (Model.IsSubtitles)
                    {
                        @Html.RadioButtonFor(model => model.IsSubtitles, false, new { id = "subs-false", @class = "form-check-input" })
                    }
                    else
                    {
                        @Html.RadioButtonFor(model => model.IsSubtitles, false, new { id = "subs-false", @class = "form-check-input", @checked="checked"})
                    }
                    @Html.Label("subs-false", Strings.Dubbing, new { @class = "form-check-label" })
                </div>

                @Html.ValidationMessageFor(model => model.Is2D, "", new { @class = "invalid-feedback" })
            </div>
        </div>
        <div class="form-group">
            <p>Edycja seansu spowoduje wysłanie emaila do każdego użytkownika, który ma rezerwację na ten seans</p>
            <input type="submit" value="@Strings.Save" class="btn btn-primary" />
            @Html.ActionLink("Powrót", "Index", null, new { @class = "btn btn-outline-light"})
        </div>
    </div>
}

@section Scripts {
    <!-- todo include this in webpack build -->
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
    <script>
        $("#time-picker").daterangepicker({
            singleDatePicker: true,
            timePicker: true,
            timePicker24Hour: true,
            locale: {
                format: 'DD.MM.YY HH:mm'
            }
        });
    </script>
}
